{
  "swagger": "2.0",
  "info": {
    "version": "3.1.0",
    "title": "Recicla Têxtil API",
    "description": "REST API for Recicla Têxtil"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Recicla Têxtil",
      "description": "API for Recicla Têxtil"
    },
    {
      "name": "Authentication",
      "description": "Operações sobre autenticação"
    },
    {
      "name": "Donors",
      "description": "Operações sobre doadores"
    },
    {
      "name": "Entities",
      "description": "Operações sobre entidades"
    },
    {
      "name": "MyData",
      "description": "Operações sobre dados do utilizador"
    },
    {
      "name": "Donations",
      "description": "Operações sobre doações"
    },
    {
      "name": "Rules",
      "description": "Operações sobre regras de negócio"
    },
    {
      "name": "Funcionários",
      "description": "Operações sobre todos os funcionários (funcionários, admins)"
    },
    {
      "name": "Vouchers",
      "description": "Operações sobre todos os vales de troca por pontos"
    }
  ],
  "schemes": ["http"],
  "consumes": [
    "application/json",
    "application/x-www-form-urlencoded",
    "multipart/form-data"
  ],
  "produces": ["application/json", "text/html"],
  "paths": {
    "/login2": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Submit login form FrontOffice",
        "description": "Submit do login e realização da autenticação",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                },
                "token": {
                  "type": "string"
                },
                "isAccepted": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Password incorreta"
          },
          "404": {
            "description": "Email não encontrado"
          },
          "500": {
            "description": "Ocorreu um erro durante o login"
          }
        }
      }
    },
    "/adicionar_doador2": {
      "post": {
        "tags": ["Donors"],
        "summary": "Add new donor (JSON RESPONSE)",
        "description": "Add a new donor",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Dados para criar doador",
            "consumes": ["multipart/form-data"],
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "type": "string",
                  "description": "Nome do doador"
                },
                "apelido": {
                  "type": "string",
                  "description": "Apelido do doador"
                },
                "email": {
                  "type": "string",
                  "description": "Email do doador"
                },
                "password": {
                  "type": "string",
                  "description": "Password do doador"
                },
                "nif": {
                  "type": "string",
                  "description": "NIF do doador"
                },
                "morada": {
                  "type": "string",
                  "description": "Morada do doador"
                },
                "codigoAngariador": {
                  "type": "string",
                  "description": "Código de angariador do doador"
                },
                "codigoAngariadorConvidado": {
                  "type": "string",
                  "description": "Código de angariador do convite",
                  "required": false
                },
                "contacto": {
                  "type": "string",
                  "description": "Contacto do doador",
                  "required": false
                }
              }
            }
          },
          {
            "name": "fotoPerfil",
            "in": "formData",
            "type": "file",
            "description": "Foto de perfil (opcional)",
            "required": false
          }
        ],
        "responses": {
          "201": {
            "description": "Doador criado com sucesso"
          },
          "500": {
            "description": "Ocorreu um erro ao adicionar o doador"
          }
        }
      }
    },
    "/adicionar_entidade2": {
      "post": {
        "tags": ["Entities"],
        "summary": "Add new entity (JSON RESPONSE)",
        "description": "Add a new entity with profile and other pictures (JSON RESPONSE)",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Dados para criar doador",
            "consumes": ["multipart/form-data"],
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "type": "string",
                  "description": "Nome da entidade"
                },
                "descricao": {
                  "type": "string",
                  "description": "Descrição da entidade"
                },
                "email": {
                  "type": "string",
                  "description": "Email da entidade"
                },
                "password": {
                  "type": "string",
                  "description": "Password da entidade"
                },
                "morada": {
                  "type": "string",
                  "description": "Morada do doador"
                },
                "contacto": {
                  "type": "string",
                  "description": "Contacto do doador"
                }
              }
            }
          },
          {
            "name": "fotoPerfil",
            "in": "formData",
            "type": "file",
            "description": "Foto de perfil"
          }
        ],
        "responses": {
          "201": {
            "description": "Entidade criada com sucesso"
          },
          "400": {
            "description": "Nenhuma imagem foi enviada"
          },
          "500": {
            "description": "Ocorreu um erro ao adicionar a entidade"
          }
        }
      }
    },
    "/myCount/edit": {
      "put": {
        "tags": ["MyData"],
        "summary": "Edit funcionario data",
        "description": "Edita os dados do funcionário",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "type": "string",
                  "description": "Nome do funcionário"
                },
                "apelido": {
                  "type": "string",
                  "description": "Apelido do funcionário"
                },
                "email": {
                  "type": "string",
                  "description": "Email do funcionário"
                },
                "contacto": {
                  "type": "string",
                  "description": "Contacto do funcionário"
                },
                "morada": {
                  "type": "string",
                  "description": "Morada do funcionário"
                },
                "senhaAtual": {
                  "type": "string",
                  "description": "Senha atual do funcionário"
                },
                "novaSenha": {
                  "type": "string",
                  "description": "Nova senha do funcionário"
                }
              },
              "required": ["nome", "apelido", "email", "contacto", "morada"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dados do funcionário atualizados com sucesso"
          },
          "401": {
            "description": "Senha atual incorreta"
          },
          "404": {
            "description": "Funcionário não encontrado"
          },
          "500": {
            "description": "Erro ao editar dados do funcionário"
          }
        }
      }
    },
    "/requests/editar_request/{id}": {
      "put": {
        "tags": ["Donations"],
        "summary": "Updates a donation request",
        "description": "Updates an existing donation request",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "entidade": {
                  "type": "string",
                  "description": "Entidade associada à doação"
                },
                "kilos": {
                  "type": "string",
                  "description": "Peso da roupa doada",
                  "minimum": 0
                },
                "pecasCrianca": {
                  "type": "string",
                  "description": "Peças de criança da doação",
                  "minimum": 0
                },
                "pecasAdulto": {
                  "type": "string",
                  "description": "Peças de adulto da doação",
                  "minimum": 0
                },
                "pecasAdolescente": {
                  "type": "string",
                  "description": "Peças de adolescente da doação",
                  "minimum": 0
                },
                "pecasTipoInterior": {
                  "type": "string",
                  "description": "Peças do tipo interior da doação",
                  "minimum": 0
                },
                "pecasTipoInferior": {
                  "type": "string",
                  "description": "Peças do tipo inferior da doação",
                  "minimum": 0
                },
                "pecasTipoTronco": {
                  "type": "string",
                  "description": "Peças do tipo tronco da doação",
                  "minimum": 0
                },
                "pecasTipoCalcado": {
                  "type": "string",
                  "description": "Peças de calçado da doação",
                  "minimum": 0
                },
                "estadoRoupa": {
                  "type": "string",
                  "description": "Estado geral da roupa da doação"
                },
                "email": {
                  "type": "string",
                  "description": "Email de doador associado à doação"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pedido atualizado com sucesso"
          },
          "404": {
            "description": "Entidade ou pedido não encontrado."
          },
          "500": {
            "description": "Ocorreu um erro ao buscar o pedido."
          },
          "400": {
            "description": "Erro desconhecido de validação do pedido."
          },
          "401": {
            "description": "O número de peças de diferentes tipos não corresponde ao número de peças totais."
          }
        }
      }
    },
    "/requests2/pedidos": {
      "get": {
        "tags": ["Donations"],
        "summary": "Requests information",
        "description": "Show all requests (FrontOffice)",
        "responses": {
          "200": {
            "description": "Doações listadas com sucesso"
          },
          "500": {
            "description": "Ocorreu um erro ao listar as doações."
          }
        }
      }
    },
    "/requests2/criarPedidoRecolha2": {
      "post": {
        "tags": ["Donations"],
        "summary": "Creates a donation",
        "description": "Creates a new donation with an associated picture (FrontOffice)",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "entidade": {
                  "type": "string",
                  "description": "Entidade associada à doação"
                },
                "kilos": {
                  "type": "string",
                  "description": "Peso da roupa doada",
                  "minimum": 0
                },
                "pecasCrianca": {
                  "type": "string",
                  "description": "Peças de criança da doação",
                  "minimum": 0
                },
                "pecasAdulto": {
                  "type": "string",
                  "description": "Peças de adulto da doação",
                  "minimum": 0
                },
                "pecasAdolescente": {
                  "type": "string",
                  "description": "Peças de adolescente da doação",
                  "minimum": 0
                },
                "pecasTipoInterior": {
                  "type": "string",
                  "description": "Peças do tipo interior da doação",
                  "minimum": 0
                },
                "pecasTipoInferior": {
                  "type": "string",
                  "description": "Peças do tipo inferior da doação",
                  "minimum": 0
                },
                "pecasTipoTronco": {
                  "type": "string",
                  "description": "Peças do tipo tronco da doação",
                  "minimum": 0
                },
                "pecasTipoCalcado": {
                  "type": "string",
                  "description": "Peças de calçado da doação",
                  "minimum": 0
                },
                "estadoRoupa": {
                  "type": "string",
                  "description": "Estado geral da roupa da doação"
                },
                "data": {
                  "type": "date",
                  "description": "Data associada à doação"
                }
              }
            }
          },
          {
            "name": "fotos",
            "in": "formData",
            "type": "file",
            "description": "Foto da doação"
          }
        ],
        "responses": {
          "201": {
            "description": "Donation created."
          },
          "400": {
            "description": "Erro de validação."
          },
          "500": {
            "description": "Ocorreu um erro ao criar o pedido."
          }
        }
      }
    },
    "/requests2/atualizarEstadoDoacao": {
      "put": {
        "tags": ["Donations"],
        "summary": "Changes the state of a donation",
        "description": "Changes the state of a donation (FrontOffice)",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "doacaoId": {
                  "type": "string",
                  "description": "Id associado à doação"
                },
                "doacaoState": {
                  "type": "string",
                  "description": "Novo estado da doação"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Donation state updated."
          },
          "500": {
            "description": "Ocorreu um erro ao atualizar o estado da doação."
          }
        }
      }
    },
    "/rules/editar_regras": {
      "put": {
        "tags": ["Rules"],
        "summary": "Edit rules data",
        "description": "Edita os dados das regras de negócio",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "pontosPorKilo": { "type": "number", "minimum": 0 },
                "pontosPorPecaAdulto": { "type": "number", "minimum": 0 },
                "pontosPorPecaCrianca": { "type": "number", "minimum": 0 },
                "pontosPorPecaAdolescente": { "type": "number", "minimum": 0 },
                "pontosPorTipoInterior": { "type": "number", "minimum": 0 },
                "pontosPorTipoInferior": { "type": "number", "minimum": 0 },
                "pontosPorTipoTronco": { "type": "number", "minimum": 0 },
                "pontosPorTipoCalcado": { "type": "number", "minimum": 0 },
                "pontosPorEstadoRoupaNovo": { "type": "number", "minimum": 0 },
                "pontosPorEstadoRoupaSemiNovo": {
                  "type": "number",
                  "minimum": 0
                },
                "pontosPorEstadoRoupaUsado": { "type": "number", "minimum": 0 },
                "pontosCodigo": { "type": "number", "minimum": 0 }
              },
              "required": [
                "pontosPorKilo",
                "pontosPorPecaAdulto",
                "pontosPorPecaCrianca",
                "pontosPorPecaAdolescente",
                "pontosPorTipoInterior",
                "pontosPorTipoInferior",
                "pontosPorTipoTronco",
                "pontosPorTipoCalcado",
                "pontosPorEstadoRoupaNovo",
                "pontosPorEstadoRoupaSemiNovo",
                "pontosPorEstadoRoupaUsado",
                "pontosCodigo"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Regra editada com sucesso"
          },
          "500": {
            "description": "Erro ao editar a regra"
          }
        }
      }
    },
    "/users/remover_funcionario": {
      "delete": {
        "tags": ["Funcionários"],
        "summary": "Remove a employee",
        "description": "Remove um funcionário da base de dados",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "funcionarioId": {
                  "type": "string",
                  "description": "ID do funcionário a ser removido"
                }
              },
              "required": ["funcionarioId"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Funcionário removido com sucesso"
          },
          "400": {
            "description": "Você não pode remover a si mesmo ou dados inválidos"
          },
          "500": {
            "description": "Erro ao remover o funcionário"
          }
        }
      }
    },
    "/users/remover_doador": {
      "delete": {
        "tags": ["Donors"],
        "summary": "Remove a donar",
        "description": "Remove um doador da base de dados",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "doadorId": {
                  "type": "string",
                  "description": "ID do doador a ser removido"
                }
              },
              "required": ["doadorId"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Doador removido com sucesso"
          },
          "500": {
            "description": "Erro ao remover o doador"
          }
        }
      }
    },
    "/users/editar_funcionario/{id}": {
      "put": {
        "tags": ["Funcionários"],
        "summary": "Edita os dados de um funcionário",
        "description": "Edita as informações de um funcionário existente",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do funcionário a ser editado",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "type": "string",
                  "description": "Nome do funcionário"
                },
                "apelido": {
                  "type": "string",
                  "description": "Apelido do funcionário"
                },
                "email": {
                  "type": "string",
                  "description": "Email do funcionário"
                },
                "contacto": {
                  "type": "string",
                  "description": "Contacto do funcionário"
                },
                "morada": {
                  "type": "string",
                  "description": "Morada do funcionário"
                },
                "admin": {
                  "type": "boolean",
                  "description": "Define se o funcionário é um administrador"
                }
              },
              "required": ["nome", "apelido", "email", "contacto", "morada"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Funcionário editado com sucesso"
          },
          "400": {
            "description": "O email já está em uso."
          },
          "404": {
            "description": "Funcionário não encontrado"
          },
          "500": {
            "description": "Ocorreu um erro ao editar o funcionário."
          }
        }
      }
    },
    "/users/editar_doador/{id}": {
      "put": {
        "tags": ["Donors"],
        "summary": "Edita os dados de um doador",
        "description": "Edita as informações de um doador existente",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do doador a ser editado",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Dados do doador a serem atualizados",
            "consumes": ["multipart/form-data"],
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "type": "string",
                  "description": "Nome do doador"
                },
                "apelido": {
                  "type": "string",
                  "description": "Apelido do doador"
                },
                "email": {
                  "type": "string",
                  "description": "Email do doador"
                },
                "nif": {
                  "type": "string",
                  "description": "NIF do doador"
                },
                "morada": {
                  "type": "string",
                  "description": "Morada do doador"
                },
                "contacto": {
                  "type": "string",
                  "description": "Contacto do doador"
                }
              },
              "required": ["nome", "apelido", "email", "nif", "morada"]
            }
          },
          {
            "name": "novafotoPerfil",
            "in": "formData",
            "type": "file",
            "description": "Nova foto de perfil (opcional)"
          }
        ],
        "responses": {
          "200": {
            "description": "Doador editado com sucesso"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "404": {
            "description": "Doador não encontrado"
          },
          "500": {
            "description": "Erro ao editar o doador"
          }
        }
      }
    },
    "/users/remover_entidade": {
      "delete": {
        "tags": ["Entities"],
        "summary": "Remove uma entidade beneficiadora",
        "description": "Remove uma entidade beneficiadora existente e todas as suas informações associadas.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "ID da entidade a ser removida",
            "schema": {
              "type": "object",
              "properties": {
                "entidadeId": {
                  "type": "string",
                  "description": "ID da entidade a ser removida"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entidade removida com sucesso"
          },
          "500": {
            "description": "Erro ao remover a entidade"
          }
        }
      }
    },
    "/users2/ver_todas_entidades2": {
      "get": {
        "tags": ["Entities"],
        "summary": "Lista todas as entidades beneficiadoras aceites",
        "description": "Retorna uma lista de todas as entidades beneficiadoras que foram aceitas e estão atualmente ativas.",
        "responses": {
          "201": {
            "description": "Lista de entidades beneficiadoras obtida com sucesso"
          },
          "500": {
            "description": "Erro ao listar as entidades beneficiadoras"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users2/getUser": {
      "get": {
        "tags": ["Donors"],
        "summary": "Obter informações do doador",
        "description": "Retorna as informações do doador logado baseado no email autenticado.",
        "responses": {
          "200": {
            "description": "Utilizador encontrado"
          },
          "404": {
            "description": "Utilizador não encontrado"
          },
          "500": {
            "description": "Erro ao procurar utilizador"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users2/editarUser": {
      "put": {
        "tags": ["Donors"],
        "summary": "Editar informações do doador",
        "description": "Edita as informações do doador logado baseado no email autenticado.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Dados a serem atualizados do doador",
            "consumes": ["multipart/form-data"],
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "type": "string",
                  "description": "Nome do doador"
                },
                "apelido": {
                  "type": "string",
                  "description": "Apelido do doador"
                },
                "nif": {
                  "type": "string",
                  "description": "NIF do doador"
                },
                "morada": {
                  "type": "string",
                  "description": "Morada do doador"
                },
                "contacto": {
                  "type": "string",
                  "description": "Contacto do doador"
                },
                "passwordAtual": {
                  "type": "string",
                  "description": "Password atual do doador",
                  "required": false
                },
                "passwordNova": {
                  "type": "string",
                  "description": "Nova password do doador",
                  "required": false
                }
              }
            }
          },
          {
            "name": "novafotoPerfil",
            "in": "formData",
            "type": "file",
            "description": "Nova foto de perfil (opcional)"
          }
        ],
        "responses": {
          "200": {
            "description": "Doador editado com sucesso"
          },
          "400": {
            "description": "NIF já está em uso"
          },
          "401": {
            "description": "Password atual incorreta"
          },
          "500": {
            "description": "Ocorreu um erro ao editar o doador"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users2/getEntity": {
      "get": {
        "tags": ["Entities"],
        "summary": "Obter informações da entidade beneficiadora",
        "description": "Retorna as informações da entidade beneficiadora logada com base no email autenticado.",
        "responses": {
          "200": {
            "description": "Entidade encontrada"
          },
          "404": {
            "description": "Entidade não encontrada"
          },
          "500": {
            "description": "Erro ao procurar entidade"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "user2/updateEntity": {
      "put": {
        "tags": ["Entities"],
        "summary": "Atualizar informações da entidade beneficiadora",
        "description": "Atualiza as informações da entidade beneficiadora logada com base no email autenticado.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Dados a serem atualizados da entidade beneficiadora",
            "consumes": ["multipart/form-data"],
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "type": "string",
                  "description": "Nome da entidade"
                },
                "descricao": {
                  "type": "string",
                  "description": "Descrição da entidade"
                },
                "morada": {
                  "type": "string",
                  "description": "Morada da entidade"
                },
                "contacto": {
                  "type": "string",
                  "description": "Contacto da entidade"
                },
                "passwordAtual": {
                  "type": "string",
                  "description": "Password atual da entidade"
                },
                "passwordNova": {
                  "type": "string",
                  "description": "Nova password da entidade"
                },
                "removedImages": {
                  "type": "string",
                  "description": "Imagens removidas (opcional)"
                }
              }
            }
          },
          {
            "name": "fotoPerfil",
            "in": "formData",
            "type": "file",
            "description": "Nova foto de perfil (opcional)"
          },
          {
            "name": "outrasFotos",
            "in": "formData",
            "type": "file",
            "description": "Outras fotos adicionais (opcional)"
          }
        ],
        "responses": {
          "200": {
            "description": "Entidade editada com sucesso"
          },
          "400": {
            "description": "NIF já está em uso"
          },
          "401": {
            "description": "Password atual incorreta"
          },
          "500": {
            "description": "Ocorreu um erro ao editar a entidade"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/vales/delete_vale/{id}": {
      "delete": {
        "tags": ["Vouchers"],
        "summary": "Eliminar vale",
        "description": "Elimina um vale específico com base no ID fornecido.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do vale a ser eliminado",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vale eliminado com sucesso"
          },
          "404": {
            "description": "Vale não encontrado"
          },
          "500": {
            "description": "Ocorreu um erro ao eliminar o vale"
          }
        }
      }
    },
    "/vales2/verVales2": {
      "get": {
        "tags": ["Vouchers"],
        "summary": "Listar vales disponíveis",
        "description": "Retorna uma lista de todos os vales disponíveis para serem trocados por pontos.",
        "responses": {
          "201": {
            "description": "Lista de vales obtida com sucesso"
          },
          "500": {
            "description": "Ocorreu um erro ao listar os vales"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/vales2/resgatarVales2": {
      "put": {
        "tags": ["Vouchers"],
        "summary": "Resgatar voucher",
        "description": "Resgata um voucher específico para um doador logado.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "ID do voucher a ser resgatado",
            "schema": {
              "type": "object",
              "properties": {
                "idVale": {
                  "type": "string",
                  "description": "ID do voucher"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Vale resgatado com sucesso"
          },
          "500": {
            "description": "Ocorreu um erro ao resgatar o vale"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your bearer token in the format **Bearer &lt;token&gt;**"
    },
    "cookieAuth": {
      "type": "apiKey",
      "in": "cookie",
      "name": "token"
    }
  },
  "definitions": {
    "Funcionario": {
      "type": "object",
      "properties": {
        "nome": {
          "type": "string"
        },
        "apelido": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "numero_empresa": {
          "type": "String",
          "required": true,
          "unique": true
        },
        "password": {
          "type": "string",
          "required": true
        },
        "admin": {
          "type": "Boolean",
          "default": false
        },
        "morada": {
          "type": "string",
          "required": true
        },
        "contacto": {
          "type": "string",
          "required": true
        },
        "role": {
          "type": "string",
          "enum": ["funcionario", "admin"],
          "default": "doador"
        }
      }
    },
    "Doador": {
      "type": "object",
      "properties": {
        "nome": {
          "type": "string"
        },
        "apelido": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "nif": {
          "type": "string"
        },
        "morada": {
          "type": "string"
        },
        "contacto": {
          "type": "string"
        },
        "numeroPontos": {
          "type": "number"
        },
        "numeroDoacoes": {
          "type": "number"
        },
        "fotoPerfil": {
          "type": "string"
        },
        "Data": {
          "type": "Date",
          "required": true,
          "default": "Date.now()"
        },
        "role": {
          "type": "string",
          "default": "doador"
        },
        "codigoAngariador": {
          "type": "string"
        },
        "codigoAngariadorConvidado": {
          "type": "string"
        }
      }
    },
    "Entidade": {
      "type": "object",
      "properties": {
        "nome": {
          "type": "String",
          "required": true,
          "unique": true
        },
        "email": {
          "type": "String",
          "required": true,
          "unique": true
        },
        "contacto": {
          "type": "String",
          "required": true
        },
        "numeroDoacoes": {
          "type": "Number",
          "default": 0
        },
        "morada": {
          "type": "String",
          "required": true
        },
        "descricao": {
          "type": "String",
          "required": true
        },
        "password": {
          "type": "String",
          "required": true
        },
        "fotoPerfil": {
          "type": "String",
          "required": true,
          "maxItems": 1
        },
        "fotos": [
          {
            "type": "String",
            "required": true
          }
        ],
        "status": {
          "type": "String",
          "enum": ["aceite", "rejeitada", "em_espera"],
          "default": "em_espera"
        },
        "role": {
          "type": "String",
          "default": "entidade"
        }
      }
    },
    "Doação": {
      "type": "object",
      "properties": {
        "email": {
          "type": "String",
          "required": true
        },
        "pecasCrianca": {
          "type": "Number",
          "required": true,
          "min": 0
        },
        "pecasAdulto": {
          "type": "Number",
          "required": true,
          "min": 0
        },
        "pecasAdolescente": {
          "type": "Number",
          "required": true,
          "min": 0
        },
        "numeroPecas": {
          "type": "Number"
        },
        "pecasTipoInterior": {
          "type": "Number",
          "required": true,
          "min": 0
        },
        "pecasTipoTronco": {
          "type": "Number",
          "required": true,
          "min": 0
        },
        "pecasTipoInferior": {
          "type": "Number",
          "required": true,
          "min": 0
        },
        "pecasTipoCalcado": {
          "type": "Number",
          "required": true,
          "min": 0
        },
        "entidade": {
          "type": "String",
          "required": true
        },
        "kilos": {
          "type": "Number",
          "required": true,
          "min": 0.1
        },
        "pontos": {
          "type": "Number",
          "default": 0
        },
        "data": {
          "type": "Date",
          "required": true
        },
        "estado": {
          "type": "String",
          "enum": [
            "Agendado",
            "Por iniciar",
            "Aprovado",
            "A realizar",
            "Validado",
            "Cancelado"
          ],
          "default": "Agendado"
        },
        "estadoRoupa": {
          "type": "String",
          "enum": ["Novo", "Semi-Novo", "Usado"],
          "default": "Usado"
        },
        "codigoAngariador": {
          "type": "String"
        }
      }
    },
    "Regras": {
      "type": "object",
      "properties": {
        "pontosPorKilo": {
          "type": "Number",
          "required": true,
          "min": 0
        },
        "pontosPorPecaAdulto": {
          "type": "Number",
          "required": true,
          "min": 0
        },
        "pontosPorPecaCrianca": {
          "type": "Number",
          "required": true,
          "min": 0
        },
        "pontosPorPecaAdolescente": {
          "type": "Number",
          "required": true,
          "min": 0
        },
        "pontosPorTipoInterior": {
          "type": "Number",
          "required": true,
          "min": 0
        },
        "pontosPorTipoInferior": {
          "type": "Number",
          "required": true,
          "min": 0
        },
        "pontosPorTipoTronco": {
          "type": "Number",
          "required": true,
          "min": 0
        },
        "pontosPorTipoCalcado": {
          "type": "Number",
          "required": true,
          "min": 0
        },
        "pontosPorEstadoRoupaNovo": {
          "type": "Number",
          "required": true,
          "min": 0
        },
        "pontosPorEstadoRoupaSemiNovo": {
          "type": "Number",
          "required": true,
          "min": 0
        },
        "pontosPorEstadoRoupaUsado": {
          "type": "Number",
          "required": true,
          "min": 0
        },
        "data": {
          "type": "Date",
          "default": "Date.now()"
        },
        "pontosCodigo": {
          "type": "Number",
          "required": true,
          "min": 0
        }
      }
    },
    "Vales": {
      "type": "object",
      "properties": {
        "empresa": {
          "type": "String",
          "required": true
        },
        "custoPontos": {
          "type": "Number",
          "required": true,
          "min": 0
        },
        "numeroResgates": {
          "type": "Number",
          "default": 0
        },
        "descricao": {
          "type": "String",
          "required": true
        }
      }
    }
  }
}
